Questions

1.Write out a generic SELECT statement.

 SELECT column-name
    FROM table-name
    WHERE column-name <condition>;



2.Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
 SELECT cookies FROM the jar of pastries WHERE cookies are chocolate.


3.Given this dogs table, write queries to select the following pieces of data:

Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

Q:Display the name, gender, and age of all dogs that are part Labrador.

 SELECT name, gender, age, breed
 FROM dogs
 Where breed LIKE '%labrador%';


Q:Display the ids of all dogs that are under 1 year old.

 SELECT id
 FROM dogs
 WHERE age <1;


Q:Display the name and age of all dogs that are female and over 35lbs.

 SELECT name, age
 FROM dogs
 WHERE weight>35;


Q:Display all of the information about all dogs that are not Shepherd mixes.
  SELECT *
  FROM dogs
  WHERE breed NOT LIKE '%shepherd%';


Q:Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
 SELECT id, age, weight, breed
 FROM dogs
 WHERE weight >60 OR breed = 'Great Dane';
  

4.Given this cats table, what records are returned from these queries?

Q:SELECT name, adoption_date FROM cats;

Mushi	2016-03-22
Seashell	(null)
Azul	2016-04-17
Victoire	2016-09-01
Nala	(null)


Q:SELECT name, age FROM cats;

Mushi	1
Seashell	7
Azul	3
Victoire	7
Nala	1


5.From the cats table, write queries to select the following pieces of data.


Q:Display all the information about all of the available cats.
SELECT *
FROM cats;


Q:Choose one cat of each age to show to potential adopters.
SELECT *
From cats
WHERE id>4;



Q:Find all of the names of the cats, so you don’t choose duplicate names for new cats.

Select names
FROM cats;


6.List each comparison operator and explain when you would use it. Include a real world example for each.

=   equal to: EX: find number in a phone book where name = 'Mary Jane'


<     less than:  EX: find items in inventory where cost < 25  (dollars)

>     greater than: EX: find items in inventory where cost > 50 (dollars)

<=    greater than or equal to: EX: find items in inventory where cost >= 50 (dollars)

>=    less than or equal to: EX: find items in inventory where cost <= 30 (dollars)

!=    not equal to: EX: Find all members that were not present in meeting  (attended != Y)
 

LIKE  using % to check if value contains the word- may be accompanied with other words.
      EX: when you can remember first name but not last name, you can pull up a list of      names that contain the first name using LIKE and check for person you are looking for.


NOT LIKE  using % to check if value does not contain a certain word or characters. 
        EX: when you want to disregard some information and view everything else but you have limited info on it, you can use NOT LIKE.

7.From the cats table, what data is returned from these queries?


Q:SELECT name FROM cats WHERE gender = ‘F’;

Seashell
Nala


Q: SELECT name FROM cats WHERE age <> 3;

Mushi
Seashell
Victoire
Nala



Q:SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
Azul
Victoire
