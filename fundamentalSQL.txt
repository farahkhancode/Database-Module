
Questions

1.List the commands for adding, updating, and deleting data.

A: 
CREATE: Adds a table
INSERT INTO: adds data into a table


UPDATE: modifies existing data in table
DELETE: Deletes entry from table
ALTER TABLE: edits columns in an existing table(add, delete or modify data)
DROP: deletes existing table or column from database.

2.Explain the structure for each type of command.


Adding data:

INSERT INTO name-of-table(column1, column2) 
VALUES (data for column1, data for column2);

OR

INSERT INTO name-of-table VALUE (data-for-column1, data-for-column2);



Updating Data:

UPDATE name-of-table SET column=new-data WHERE id=id-of-item-you-want-to-update


Deleting Data:
DELETE FROM table-name WHERE id= id-of-row-you-want-to-delete




3.What are some of the data types that can be used in tables? Give a real-world example of each type.

Date: When you want the date to be recorded

Money: when you are recording currency

Decimal: when recording metric measurements.



4.Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

Q:Which data type would you use to store each of the following pieces of information?

First and last name : TEXT
Whether they sent in their RSVP: BOOLEAN
Number of guests: INTEGER
Number of meals: DECIMAL


Q:Write a command that creates the table to track the wedding dinner.

 CREATE TABLE wedding (
      firstName text,
      lastName text,
      rsvp boolean,
      guests integer,
      meals  decimal
  );

Q:Write a command that adds a column to track whether the guest sent a thank you card.

ALTER TABLE wedding ADD COLUMN thankYouCard boolean SET DEFAULT 'n';



Q:You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

ALTER TABLE wedding DROP COLUMN meals;

Q:The guests will need a place to sit at the reception, so write a command that adds a column for table number.

ALTER TABLE wedding ADD COLUMN tableNumber integer;

Q:The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.

to delete just table numbers data:

DELETE FROM wedding WHERE tableNumber>0;

or to delete column :

ALTER TABLE wedding DROP COLUMN tableNumber;


5.Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

 CREATE TABLE library (
      ISBN char,
      title text,
      author text,
      genre text,
      publicationDate date,
      totalCopies integer,
      availableCopies integer
  );

Q:Find three books and add their information to the table.

 INSERT INTO library (ISBN, title, author, genre, publicationDate, totalCopies, availableCopies)
  VALUES
  (1419708457, 'Rosie Revere Engineer', 'Andrea Beaty', 'Fiction', 2013-09-03, 10, 9),
  (0810911062, 'Iggy Peck Architect', 'Andrea Beaty', 'Fiction', 2007-10-01, 7, 4),
  (1419721372, 'Ada Twist Scientist', 'Andrea Beaty', 'Fiction', 2016-09-06, 6, 3);
 


Q:Someone has just checked out one of the books. Change the number of available copies to 1 fewer.

UPDATE library SET availableCopies=availableCopies-1 WHERE title='Rosie Revere Engineer';


Q:Now one of the books has been added to the banned books list. Remove it from the table.

DELETE FROM library WHERE ISBN=1419708457;



6.Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

CREATE TABLE spacecrafts(
      id char,
      name text,
      yearLaunched char,
      countryOrigin text,
      missionDescription text,
      orbitingBody text,
      operating boolean,
      milesFromEarth integer
  );



Q:Add three non-Earth-orbiting satellites to the table.

 INSERT INTO spacecrafts (id, name, yearLaunched, countryOrigin, missionDescription, orbitingBody, operating, milesFromEarth)
  VALUES
  (2256, 'Viking 1', 1975, 'USA', 'orbit and land', 'Mars', 'N' , 33900000),
  (31145, 'Mars 3', 1971, 'Russia', 'orbit and land', 'Mars', 'N', 33900000),
  (435565, 'Phobos 2', 1988, 'USA', 'orbiter', 'Mars', 'Y', 33900000);


Q:Remove one of the satellites from the table since it has just crashed into the planet.

DELETE FROM spacecrafts  WHERE name='Viking 1';

Q:Edit another satellite because it is no longer operating and change the value to reflect that.

UPDATE spacecrafts SET operating='N' WHERE name='Phobos 2';


7.Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:

CREATE TABLE emails(
  id char, 
  subject text, 
  sender text, 
  otherRecipients text,  
  body text,
  time timestamp,
  read boolean, 
  chainId char
);

Q:Add three new emails to the inbox.

 INSERT INTO emails (id, subject, sender, otherRecipients, body, time, read, chainId)
  VALUES
  (67899938, 'sweepstakes', 'buybuybaby@go.com', 'mary@hotmail.com, joe@go.com', 'Join & win!', '2017-07-23', 'N' , 456746),
  (65367849, 'school info', 'elementary@school.com', 'tony@edu.com, harry@board.com', 'PTO meeting tonight', '2017-07-20', 'Y', 465789),
  (73646678, 'dinner meeting', 'work@pwc.com', 'tania@hotmail.com', 'Lets meet for dinner!','Y', 476007);

Q:You deleted one of the emails, so write a command to remove the row from the inbox table.

DELETE FROM emails  WHERE subject= 'sweepstakes';

Q:You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.

UPDATE emails SET read ='N' WHERE subject ='school info';